<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="borrowed.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Borrow.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="returned.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="inventoryViewModelBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>